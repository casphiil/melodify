.player {
  background-color: #000;
  grid-area: p;
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  min-width: 800px;
  bottom: 0;
  left: 0;
  box-shadow: 0 -15px 15px -5px rgba(0, 0, 0, 0.3);
}
.react-player {
  display: none;
}

//player
.player button {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  overflow: hidden;
  transition: transform 0.3s;
  display: flex;
  align-items: center;
  background: none;
  fill: var(--base-color-5);
  border: none;
}
.player button:hover {
  transform: scale(1.05);
}
.player-btns {
  display: flex;
  justify-content: center;
  gap: 20px;
  align-items: center;
  width: 80%;
}
.player-btns button {
  width: 25px;
  height: 25px;
}
.track-section {
  width: auto;
}
.player-section {
  width: 37%;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: var(--gap-1);
}
.player-btns {
  margin-bottom: 10px;
}
.player-btns button:nth-child(3) {
  width: 32px;
  height: 32px;
  background-color: #fff;
  padding: 7px;
  fill: #000;
}
.play-btn {
  display: none;
}
.playing .play-btn:nth-child(1) {
  display: block;
}
.paused .play-btn:nth-child(2) {
  display: block;
}

//volume
.volume-section {
  width: 8%;
  display: flex;
  align-content: center;
}
.muted .volume-icon {
  fill: #777;
}

//slider
.slider-wrapper {
  width: 100%;
  display: flex;
  align-items: center;
}

.track-time {
  font-size: 0.7em;
  padding: 0 5px;
}

/* === range theme and appearance === */
input[type='range'] {
  font-size: 1.5rem;
  width: 12.5em;
}

input[type='range'] {
  color: #fff;
  --thumb-height: 10px;
  --track-height: 2px;
  --track-color: rgba(255, 255, 255, 0.4);
  --brightness-hover: 180%;
  --brightness-down: 80%;
  --clip-edges: 2px;
}

/* === range commons === */
input[type='range'] {
  position: relative;
  background: #fff0;
  overflow: hidden;
  width: 100%;
}

input[type='range']:active {
  cursor: grabbing;
}

input[type='range']:disabled {
  filter: grayscale(1);
  opacity: 0.3;
  cursor: not-allowed;
}

/* === WebKit specific styles === */
input[type='range'],
input[type='range']::-webkit-slider-runnable-track,
input[type='range']::-webkit-slider-thumb {
  -webkit-appearance: none;
  transition: all ease 100ms;
  height: var(--thumb-height);
}

input[type='range']::-webkit-slider-runnable-track,
input[type='range']::-webkit-slider-thumb {
  position: relative;
}

input[type='range']::-webkit-slider-thumb {
  --thumb-radius: calc((var(--thumb-height) * 0.5) - 1px);
  --clip-top: calc((var(--thumb-height) - var(--track-height)) * 0.5 - 0.5px);
  --clip-bottom: calc(var(--thumb-height) - var(--clip-top));
  --clip-further: calc(100% + 1px);
  --box-fill: calc(-100vmax - var(--thumb-width, var(--thumb-height))) 0 0 100vmax currentColor;

  width: var(--thumb-width, var(--thumb-height));
  background: #fff;
  background-color: rgba(255, 255, 255, 0);
  box-shadow: var(--box-fill);
  border-radius: var(--thumb-width, var(--thumb-height));
  transition: all 0.3s;
  clip-path: polygon(
    100% -1px,
    var(--clip-edges) -1px,
    0 var(--clip-top),
    -100vmax var(--clip-top),
    -100vmax var(--clip-bottom),
    0 var(--clip-bottom),
    var(--clip-edges) 100%,
    var(--clip-further) var(--clip-further)
  );
}

input[type='range']:hover::-webkit-slider-thumb {
  cursor: grab;
  background: rgba(255, 255, 255, 1);
}

input[type='range']:active::-webkit-slider-thumb {
  filter: brightness(var(--brightness-down));
  cursor: grabbing;
}

input[type='range']::-webkit-slider-runnable-track {
  background: linear-gradient(var(--track-color) 0 0) scroll no-repeat center / 100% calc(var(--track-height) + 1px);
}

input[type='range']:disabled::-webkit-slider-thumb {
  cursor: not-allowed;
}
input[type='range']:hover {
  color: var(--base-color-1);
}
